什么是JDK：
	可以把java程序设计语言、java虚拟机、javaAPI类库这个三部分统称为JDK(Java Development Kit)，JDK是用于支持java程序开发
的最小环境。

什么是JRE:
	可以把JAVA API类库中的 JAVA SE API子集和Java虚拟机统称为JRE(java Runtime Environment) JRE，JRE是支持java程序运行的
标准环境。

虚拟机运行时数据区域:
	java虚拟机在执行java程序的过程中会把它管理的内存划分若干个不同的数据区域。这些区域都有各自的用途，以及创建和销毁时间，
有的区域随着虚拟机的进程启动而存在，有些区域依赖用户线程的启动和结束而建立和销毁。

程序计数器：
	程序计数器是一个较小的内存空间。它可以看作是当前线程所执行的字节码的行号指示器。字节码解释器工作时就是通过改变这个计数器的
值来选择下一条需要执行的字节码指令、分支、循环、跳转、异常恢复等基础功能都需要依赖这个计数器来完成。
	由于java虚拟机多线程是通过线程的轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器都只会执行一条线程
中的指令。因此，为了线程切换恢复能执行到正确的位置，每条线程都需要有一个独立的程序计数器，各条线程之间计数器互不影响，独立存储，
我们称这类内存区域为“线程私有“内存。

java虚拟机栈：
	java虚拟机栈是线程私有的，它的生命周期和线程相同。虚拟机描述的是java方法执行的内存模型：每个方法在执行的同时都会创建栈帧用于存储
局部变量表、操作数帧、动态链接、方法出口灯信息。每个方法从调用直至执行完成的过程，就对应着一个帧栈在虚拟机中入栈和出栈的过程。

本地方法栈：
	本地方法栈与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行java方法（也就是字节码）服务，而本地方法栈
则为虚拟机使用到Native方法服务。

java堆：
	java堆是java虚拟机管理的内存中最大的一块。java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。次内存区域的唯一目的就是存放对象
对象的实例，几乎所有对象的实例都会在这里分配内存。

方法区：
	方法区，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。
	
运行时常量池：
	运行时常量池是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等信息，还有一项信息是常量池，用于存放编译期生成的各种字面量
和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。

对象的创建：
	


















